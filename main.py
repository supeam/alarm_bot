import discord
from discord.ext import commands, tasks
import datetime
import os
import json
from keep_alive import keep_alive

TOKEN = os.environ['TOKEN']  # ‡∏ï‡πâ‡∏≠‡∏á‡∏ï‡∏±‡πâ‡∏á Environment Variable ‡∏ä‡∏∑‡πà‡∏≠ TOKEN ‡πÉ‡∏ô Replit
CHANNEL_ID = 1326096175748612200  # ‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÄ‡∏õ‡πá‡∏ô ID ‡∏Ç‡∏≠‡∏á‡∏ä‡πà‡∏≠‡∏á Discord ‡∏ó‡∏µ‡πà‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ä‡πâ

intents = discord.Intents.default()
intents.message_content = True
intents.messages = True

bot = commands.Bot(command_prefix="!", intents=intents)

# ‡∏£‡∏≤‡∏¢‡∏ä‡∏∑‡πà‡∏≠‡∏™‡∏°‡∏≤‡∏ä‡∏¥‡∏Å‡∏ó‡∏µ‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÑ‡∏î‡πâ (‡∏ä‡∏∑‡πà‡∏≠ Discord username ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏™‡πà‡∏ß‡∏ô‡∏´‡∏ô‡πâ‡∏≤)
members = {
    "lawganeyyeol.": "‡πÇ‡∏ü‡∏°",
    "supeam": "‡∏≠‡∏¥‡∏á",
    "heart2952": "‡∏Æ‡∏≤‡∏£‡πå‡∏ó"
}

payment_status = {}

def reset_payment_status():
    month = datetime.datetime.now().strftime("%B")
    return {
        "‡πÇ‡∏ü‡∏°": False,
        "‡∏≠‡∏¥‡∏á": False,
        "‡∏Æ‡∏≤‡∏£‡πå‡∏ó": False,
        "‡πÄ‡∏î‡∏∑‡∏≠‡∏ô": month
    }

def save_status():
    with open("payment_status.json", "w", encoding="utf-8") as f:
        json.dump(payment_status, f, ensure_ascii=False)

def load_status():
    global payment_status
    try:
        with open("payment_status.json", "r", encoding="utf-8") as f:
            payment_status.update(json.load(f))
    except FileNotFoundError:
        payment_status.update(reset_payment_status())
        save_status()

@tasks.loop(time=datetime.time(hour=9, minute=0))  # ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏ß‡∏±‡∏ô‡πÄ‡∏ß‡∏•‡∏≤ 09:00
async def monthly_reminder():
    now = datetime.datetime.now()
    if now.day == 1:
        global payment_status
        payment_status = reset_payment_status()
        save_status()
        channel = bot.get_channel(CHANNEL_ID)
        if isinstance(channel, discord.TextChannel):
            await channel.send("üîî ‡∏ß‡∏±‡∏ô‡∏ô‡∏µ‡πâ‡∏ß‡∏±‡∏ô‡∏ó‡∏µ‡πà 1 ‡πÅ‡∏•‡πâ‡∏ß! ‡∏≠‡∏¢‡πà‡∏≤‡∏•‡∏∑‡∏°‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡∏ô‡∏∞‡∏Ñ‡∏£‡∏±‡∏ö üí∏")

@bot.event
async def on_ready():
    load_status()
    monthly_reminder.start()
    print(f"[READY] Logged in as {bot.user}")

@bot.event
async def on_message(message):
    print(f"[DEBUG] ‡πÑ‡∏î‡πâ‡∏£‡∏±‡∏ö‡∏Ç‡πâ‡∏≠‡∏Ñ‡∏ß‡∏≤‡∏°‡∏à‡∏≤‡∏Å: {message.author.name} ‡πÉ‡∏ô‡∏ä‡πà‡∏≠‡∏á {message.channel.name}")
    print(f"[DEBUG] ‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå: {message.attachments}")

    if message.channel.id != CHANNEL_ID or message.author.bot:
        return

    if message.attachments:
        username = message.author.name  # ‚úÖ ‡πÉ‡∏ä‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ä‡∏∑‡πà‡∏≠ (‡πÑ‡∏°‡πà‡∏£‡∏ß‡∏° tag ‡πÄ‡∏ä‡πà‡∏ô #1234)
        print(f"[DEBUG] ‡∏ú‡∏π‡πâ‡∏™‡πà‡∏á‡πÅ‡∏ô‡∏ö‡πÑ‡∏ü‡∏•‡πå: {username}")
        if username in members:
            member_name = members[username]
            payment_status[member_name] = True
            save_status()
            await message.channel.send(f"{member_name} ‡πÑ‡∏î‡πâ‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‚úÖ")
            await send_status(message.channel)
        else:
            await message.channel.send(f"‡∏ä‡∏∑‡πà‡∏≠ {username} ‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡∏£‡∏∞‡∏ö‡∏ö ‚ùå")

    await bot.process_commands(message)

async def send_status(channel):
    status_lines = [f"{k}: {'‡∏à‡πà‡∏≤‡∏¢‡πÅ‡∏•‡πâ‡∏ß ‚úÖ' if v else '‡∏¢‡∏±‡∏á‡πÑ‡∏°‡πà‡∏à‡πà‡∏≤‡∏¢ ‚ùå'}" for k, v in payment_status.items() if k != '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô']
    await channel.send(f"üìÖ ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô ({payment_status['‡πÄ‡∏î‡∏∑‡∏≠‡∏ô']}):\n" + "\n".join(status_lines))

@bot.command()
async def ‡πÄ‡∏ä‡πá‡∏Ñ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞(ctx):
    await send_status(ctx.channel)

@bot.command()
async def ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï(ctx):
    global payment_status
    payment_status = reset_payment_status()
    save_status()
    await ctx.send("üîÅ ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏à‡πà‡∏≤‡∏¢‡πÄ‡∏á‡∏¥‡∏ô‡πÄ‡∏£‡∏µ‡∏¢‡∏ö‡∏£‡πâ‡∏≠‡∏¢")

# ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å Flask server ‡∏à‡∏≤‡∏Å keep_alive.py
keep_alive()
bot.run(TOKEN)